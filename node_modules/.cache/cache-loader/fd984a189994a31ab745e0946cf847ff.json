{"remainingRequest":"/Users/penghaoen2/Documents/GitHub/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/penghaoen2/Documents/GitHub/docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/penghaoen2/Documents/GitHub/docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js","mtime":1602326789994},{"path":"/Users/penghaoen2/Documents/GitHub/docs/node_modules/cache-loader/dist/cjs.js","mtime":1602325258557},{"path":"/Users/penghaoen2/Documents/GitHub/docs/node_modules/babel-loader/lib/index.js","mtime":1602317945534}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3BlbmdoYW9lbjIvRG9jdW1lbnRzL0dpdEh1Yi9kb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjsvKioKICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqLyAvKiBlc2xpbnQtZGlzYWJsZSBqc3gtYTExeS9uby1ub25pbnRlcmFjdGl2ZS10YWJpbmRleCAqL2ltcG9ydCBSZWFjdCx7dXNlRWZmZWN0LHVzZVN0YXRlLHVzZVJlZn1mcm9tJ3JlYWN0JztpbXBvcnQgY2xzeCBmcm9tJ2Nsc3gnO2ltcG9ydCBIaWdobGlnaHQse2RlZmF1bHRQcm9wc31mcm9tJ3ByaXNtLXJlYWN0LXJlbmRlcmVyJztpbXBvcnQgY29weSBmcm9tJ2NvcHktdGV4dC10by1jbGlwYm9hcmQnO2ltcG9ydCByYW5nZVBhcnNlciBmcm9tJ3BhcnNlLW51bWVyaWMtcmFuZ2UnO2ltcG9ydCB1c2VEb2N1c2F1cnVzQ29udGV4dCBmcm9tJ0Bkb2N1c2F1cnVzL3VzZURvY3VzYXVydXNDb250ZXh0JztpbXBvcnQgdXNlUHJpc21UaGVtZSBmcm9tJ0B0aGVtZS9ob29rcy91c2VQcmlzbVRoZW1lJztpbXBvcnQgc3R5bGVzIGZyb20nLi9zdHlsZXMubW9kdWxlLmNzcyc7Y29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZVJlZ2V4PS97KFtcZCwtXSspfS87Y29uc3QgZ2V0SGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXg9KGxhbmd1YWdlcz1bJ2pzJywnanNCbG9jaycsJ2pzeCcsJ3B5dGhvbicsJ2h0bWwnXSk9PnsvLyBzdXBwb3J0ZWQgdHlwZXMgb2YgY29tbWVudHMKY29uc3QgY29tbWVudHM9e2pzOntzdGFydDonXFwvXFwvJyxlbmQ6Jyd9LGpzQmxvY2s6e3N0YXJ0OidcXC9cXConLGVuZDonXFwqXFwvJ30sanN4OntzdGFydDonXFx7XFxzKlxcL1xcKicsZW5kOidcXCpcXC9cXHMqXFx9J30scHl0aG9uOntzdGFydDonIycsZW5kOicnfSxodG1sOntzdGFydDonPCEtLScsZW5kOictLT4nfX07Ly8gc3VwcG9ydGVkIGRpcmVjdGl2ZXMKY29uc3QgZGlyZWN0aXZlcz1bJ2hpZ2hsaWdodC1uZXh0LWxpbmUnLCdoaWdobGlnaHQtc3RhcnQnLCdoaWdobGlnaHQtZW5kJ10uam9pbignfCcpOy8vIHRvIGJlIG1vcmUgcmVsaWFibGUsIHRoZSBvcGVuaW5nIGFuZCBjbG9zaW5nIGNvbW1lbnQgbXVzdCBtYXRjaApjb25zdCBjb21tZW50UGF0dGVybj1sYW5ndWFnZXMubWFwKGxhbmc9PmAoPzoke2NvbW1lbnRzW2xhbmddLnN0YXJ0fVxccyooJHtkaXJlY3RpdmVzfSlcXHMqJHtjb21tZW50c1tsYW5nXS5lbmR9KWApLmpvaW4oJ3wnKTsvLyB3aGl0ZSBzcGFjZSBpcyBhbGxvd2VkLCBidXQgb3RoZXJ3aXNlIGl0IHNob3VsZCBiZSBvbiBpdCdzIG93biBsaW5lCnJldHVybiBuZXcgUmVnRXhwKGBeXFxzKig/OiR7Y29tbWVudFBhdHRlcm59KVxccyokYCk7fTsvLyBzZWxlY3QgY29tbWVudCBzdHlsZXMgYmFzZWQgb24gbGFuZ3VhZ2UKY29uc3QgaGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXg9bGFuZz0+e3N3aXRjaChsYW5nKXtjYXNlJ2pzJzpjYXNlJ2phdmFzY3JpcHQnOmNhc2UndHMnOmNhc2UndHlwZXNjcmlwdCc6cmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KFsnanMnLCdqc0Jsb2NrJ10pO2Nhc2UnanN4JzpjYXNlJ3RzeCc6cmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KFsnanMnLCdqc0Jsb2NrJywnanN4J10pO2Nhc2UnaHRtbCc6cmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KFsnanMnLCdqc0Jsb2NrJywnaHRtbCddKTtjYXNlJ3B5dGhvbic6Y2FzZSdweSc6cmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KFsncHl0aG9uJ10pO2RlZmF1bHQ6Ly8gYWxsIGNvbW1lbnQgdHlwZXMKcmV0dXJuIGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KCk7fX07Y29uc3QgY29kZUJsb2NrVGl0bGVSZWdleD0vdGl0bGU9Ii4qIi87ZXhwb3J0IGRlZmF1bHQoKHtjaGlsZHJlbixjbGFzc05hbWU6bGFuZ3VhZ2VDbGFzc05hbWUsbWV0YXN0cmluZ30pPT57Y29uc3R7c2l0ZUNvbmZpZzp7dGhlbWVDb25maWc6e3ByaXNtPXt9fX19PXVzZURvY3VzYXVydXNDb250ZXh0KCk7Y29uc3Rbc2hvd0NvcGllZCxzZXRTaG93Q29waWVkXT11c2VTdGF0ZShmYWxzZSk7Y29uc3RbbW91bnRlZCxzZXRNb3VudGVkXT11c2VTdGF0ZShmYWxzZSk7Ly8gVGhlIFByaXNtIHRoZW1lIG9uIFNTUiBpcyBhbHdheXMgdGhlIGRlZmF1bHQgdGhlbWUgYnV0IHRoZSBzaXRlIHRoZW1lCi8vIGNhbiBiZSBpbiBhIGRpZmZlcmVudCBtb2RlLiBSZWFjdCBoeWRyYXRpb24gZG9lc24ndCB1cGRhdGUgRE9NIHN0eWxlcwovLyB0aGF0IGNvbWUgZnJvbSBTU1IuIEhlbmNlIGZvcmNlIGEgcmUtcmVuZGVyIGFmdGVyIG1vdW50aW5nIHRvIGFwcGx5IHRoZQovLyBjdXJyZW50IHJlbGV2YW50IHN0eWxlcy4gVGhlcmUgd2lsbCBiZSBhIGZsYXNoIHNlZW4gb2YgdGhlIG9yaWdpbmFsCi8vIHN0eWxlcyBzZWVuIHVzaW5nIHRoaXMgY3VycmVudCBhcHByb2FjaCBidXQgdGhhdCdzIHByb2JhYmx5IG9rLiBGaXhpbmcKLy8gdGhlIGZsYXNoIHdpbGwgcmVxdWlyZSBjaGFuZ2luZyB0aGUgdGhlbWluZyBhcHByb2FjaCBhbmQgaXMgbm90IHdvcnRoIGl0Ci8vIGF0IHRoaXMgcG9pbnQuCnVzZUVmZmVjdCgoKT0+e3NldE1vdW50ZWQodHJ1ZSk7fSxbXSk7Y29uc3QgYnV0dG9uPXVzZVJlZihudWxsKTtsZXQgaGlnaGxpZ2h0TGluZXM9W107bGV0IGNvZGVCbG9ja1RpdGxlPScnO2NvbnN0IHByaXNtVGhlbWU9dXNlUHJpc21UaGVtZSgpO2lmKG1ldGFzdHJpbmcmJmhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleC50ZXN0KG1ldGFzdHJpbmcpKXsvLyBUZXN0ZWQgYWJvdmUKLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb24KY29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZT1tZXRhc3RyaW5nLm1hdGNoKGhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleClbMV07aGlnaGxpZ2h0TGluZXM9cmFuZ2VQYXJzZXIucGFyc2UoaGlnaGxpZ2h0TGluZXNSYW5nZSkuZmlsdGVyKG49Pm4+MCk7fWlmKG1ldGFzdHJpbmcmJmNvZGVCbG9ja1RpdGxlUmVnZXgudGVzdChtZXRhc3RyaW5nKSl7Ly8gVGVzdGVkIGFib3ZlCi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uCmNvZGVCbG9ja1RpdGxlPW1ldGFzdHJpbmcubWF0Y2goY29kZUJsb2NrVGl0bGVSZWdleClbMF0uc3BsaXQoJ3RpdGxlPScpWzFdLnJlcGxhY2UoLyIrL2csJycpO31sZXQgbGFuZ3VhZ2U9bGFuZ3VhZ2VDbGFzc05hbWUmJmxhbmd1YWdlQ2xhc3NOYW1lLnJlcGxhY2UoL2xhbmd1YWdlLS8sJycpO2lmKCFsYW5ndWFnZSYmcHJpc20uZGVmYXVsdExhbmd1YWdlKXtsYW5ndWFnZT1wcmlzbS5kZWZhdWx0TGFuZ3VhZ2U7fS8vIG9ubHkgZGVjbGFyYXRpb24gT1IgZGlyZWN0aXZlIGhpZ2hsaWdodCBjYW4gYmUgdXNlZCBmb3IgYSBibG9jawpsZXQgY29kZT1jaGlsZHJlbi5yZXBsYWNlKC9cbiQvLCcnKTtpZihoaWdobGlnaHRMaW5lcy5sZW5ndGg9PT0wJiZsYW5ndWFnZSE9PXVuZGVmaW5lZCl7bGV0IHJhbmdlPScnO2NvbnN0IGRpcmVjdGl2ZVJlZ2V4PWhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4KGxhbmd1YWdlKTsvLyBnbyB0aHJvdWdoIGxpbmUgYnkgbGluZQpjb25zdCBsaW5lcz1jaGlsZHJlbi5yZXBsYWNlKC9cbiQvLCcnKS5zcGxpdCgnXG4nKTtsZXQgYmxvY2tTdGFydDsvLyBsb29wIHRocm91Z2ggbGluZXMKZm9yKGxldCBpbmRleD0wO2luZGV4PGxpbmVzLmxlbmd0aDspe2NvbnN0IGxpbmU9bGluZXNbaW5kZXhdOy8vIGFkanVzdCBmb3IgMC1pbmRleApjb25zdCBsaW5lTnVtYmVyPWluZGV4KzE7Y29uc3QgbWF0Y2g9bGluZS5tYXRjaChkaXJlY3RpdmVSZWdleCk7aWYobWF0Y2ghPT1udWxsKXtjb25zdCBkaXJlY3RpdmU9bWF0Y2guc2xpY2UoMSkucmVkdWNlKChmaW5hbCxpdGVtKT0+ZmluYWx8fGl0ZW0sdW5kZWZpbmVkKTtzd2l0Y2goZGlyZWN0aXZlKXtjYXNlJ2hpZ2hsaWdodC1uZXh0LWxpbmUnOnJhbmdlKz1gJHtsaW5lTnVtYmVyfSxgO2JyZWFrO2Nhc2UnaGlnaGxpZ2h0LXN0YXJ0JzpibG9ja1N0YXJ0PWxpbmVOdW1iZXI7YnJlYWs7Y2FzZSdoaWdobGlnaHQtZW5kJzpyYW5nZSs9YCR7YmxvY2tTdGFydH0tJHtsaW5lTnVtYmVyLTF9LGA7YnJlYWs7ZGVmYXVsdDpicmVhazt9bGluZXMuc3BsaWNlKGluZGV4LDEpO31lbHNley8vIGxpbmVzIHdpdGhvdXQgZGlyZWN0aXZlcyBhcmUgdW5jaGFuZ2VkCmluZGV4Kz0xO319aGlnaGxpZ2h0TGluZXM9cmFuZ2VQYXJzZXIucGFyc2UocmFuZ2UpO2NvZGU9bGluZXMuam9pbignXG4nKTt9Y29uc3QgaGFuZGxlQ29weUNvZGU9KCk9Pntjb3B5KGNvZGUpO3NldFNob3dDb3BpZWQodHJ1ZSk7c2V0VGltZW91dCgoKT0+c2V0U2hvd0NvcGllZChmYWxzZSksMjAwMCk7fTtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChIaWdobGlnaHQsX2V4dGVuZHMoe30sZGVmYXVsdFByb3BzLHtrZXk6U3RyaW5nKG1vdW50ZWQpLHRoZW1lOnByaXNtVGhlbWUsY29kZTpjb2RlLy8gQHRzLWV4cGVjdC1lcnJvcjogcHJpc20tcmVhY3QtcmVuZGVyZXIgZG9lc24ndCBleHBvcnQgTGFuZ3VhZ2UgdHlwZQosbGFuZ3VhZ2U6bGFuZ3VhZ2V9KSwoe2NsYXNzTmFtZSxzdHlsZSx0b2tlbnMsZ2V0TGluZVByb3BzLGdldFRva2VuUHJvcHN9KT0+LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsbnVsbCxjb2RlQmxvY2tUaXRsZSYmLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse3N0eWxlOnN0eWxlLGNsYXNzTmFtZTpzdHlsZXMuY29kZUJsb2NrVGl0bGV9LGNvZGVCbG9ja1RpdGxlKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOnN0eWxlcy5jb2RlQmxvY2tDb250ZW50fSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiYnV0dG9uIix7cmVmOmJ1dHRvbix0eXBlOiJidXR0b24iLCJhcmlhLWxhYmVsIjoiQ29weSBjb2RlIHRvIGNsaXBib2FyZCIsY2xhc3NOYW1lOmNsc3goc3R5bGVzLmNvcHlCdXR0b24se1tzdHlsZXMuY29weUJ1dHRvbldpdGhUaXRsZV06Y29kZUJsb2NrVGl0bGV9KSxvbkNsaWNrOmhhbmRsZUNvcHlDb2RlfSxzaG93Q29waWVkPydDb3BpZWQnOidDb3B5JyksLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse3RhYkluZGV4OjAsY2xhc3NOYW1lOmNsc3goY2xhc3NOYW1lLHN0eWxlcy5jb2RlQmxvY2sse1tzdHlsZXMuY29kZUJsb2NrV2l0aFRpdGxlXTpjb2RlQmxvY2tUaXRsZX0pfSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOnN0eWxlcy5jb2RlQmxvY2tMaW5lcyxzdHlsZTpzdHlsZX0sdG9rZW5zLm1hcCgobGluZSxpKT0+e2lmKGxpbmUubGVuZ3RoPT09MSYmbGluZVswXS5jb250ZW50PT09Jycpe2xpbmVbMF0uY29udGVudD0nXG4nOy8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tcGFyYW0tcmVhc3NpZ24KfWNvbnN0IGxpbmVQcm9wcz1nZXRMaW5lUHJvcHMoe2xpbmUsa2V5Oml9KTtpZihoaWdobGlnaHRMaW5lcy5pbmNsdWRlcyhpKzEpKXtsaW5lUHJvcHMuY2xhc3NOYW1lPWAke2xpbmVQcm9wcy5jbGFzc05hbWV9IGRvY3VzYXVydXMtaGlnaGxpZ2h0LWNvZGUtbGluZWA7fXJldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLF9leHRlbmRzKHtrZXk6aX0sbGluZVByb3BzKSxsaW5lLm1hcCgodG9rZW4sa2V5KT0+LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInNwYW4iLF9leHRlbmRzKHtrZXk6a2V5fSxnZXRUb2tlblByb3BzKHt0b2tlbixrZXl9KSkpKSk7fSkpKSkpKTt9KTs="},{"version":3,"sources":["/Users/penghaoen2/Documents/GitHub/docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js"],"names":["React","useEffect","useState","useRef","clsx","Highlight","defaultProps","copy","rangeParser","useDocusaurusContext","usePrismTheme","styles","highlightLinesRangeRegex","getHighlightDirectiveRegex","languages","comments","js","start","end","jsBlock","jsx","python","html","directives","join","commentPattern","map","lang","RegExp","highlightDirectiveRegex","codeBlockTitleRegex","children","className","languageClassName","metastring","siteConfig","themeConfig","prism","showCopied","setShowCopied","mounted","setMounted","button","highlightLines","codeBlockTitle","prismTheme","test","highlightLinesRange","match","parse","filter","n","split","replace","language","defaultLanguage","code","length","undefined","range","directiveRegex","lines","blockStart","index","line","lineNumber","directive","slice","reduce","final","item","splice","handleCopyCode","setTimeout","String","style","tokens","getLineProps","getTokenProps","codeBlockContent","copyButton","copyButtonWithTitle","codeBlock","codeBlockWithTitle","codeBlockLines","i","content","lineProps","key","includes","token"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\nimport React, {useEffect, useState, useRef} from 'react';\nimport clsx from 'clsx';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport copy from 'copy-text-to-clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport usePrismTheme from '@theme/hooks/usePrismTheme';\nimport styles from './styles.module.css';\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\n\nconst getHighlightDirectiveRegex = (\n  languages = ['js', 'jsBlock', 'jsx', 'python', 'html'],\n) => {\n  // supported types of comments\n  const comments = {\n    js: {\n      start: '\\\\/\\\\/',\n      end: '',\n    },\n    jsBlock: {\n      start: '\\\\/\\\\*',\n      end: '\\\\*\\\\/',\n    },\n    jsx: {\n      start: '\\\\{\\\\s*\\\\/\\\\*',\n      end: '\\\\*\\\\/\\\\s*\\\\}',\n    },\n    python: {\n      start: '#',\n      end: '',\n    },\n    html: {\n      start: '<!--',\n      end: '-->',\n    },\n  }; // supported directives\n\n  const directives = [\n    'highlight-next-line',\n    'highlight-start',\n    'highlight-end',\n  ].join('|'); // to be more reliable, the opening and closing comment must match\n\n  const commentPattern = languages\n    .map(\n      (lang) =>\n        `(?:${comments[lang].start}\\\\s*(${directives})\\\\s*${comments[lang].end})`,\n    )\n    .join('|'); // white space is allowed, but otherwise it should be on it's own line\n\n  return new RegExp(`^\\\\s*(?:${commentPattern})\\\\s*$`);\n}; // select comment styles based on language\n\nconst highlightDirectiveRegex = (lang) => {\n  switch (lang) {\n    case 'js':\n    case 'javascript':\n    case 'ts':\n    case 'typescript':\n      return getHighlightDirectiveRegex(['js', 'jsBlock']);\n\n    case 'jsx':\n    case 'tsx':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'jsx']);\n\n    case 'html':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'html']);\n\n    case 'python':\n    case 'py':\n      return getHighlightDirectiveRegex(['python']);\n\n    default:\n      // all comment types\n      return getHighlightDirectiveRegex();\n  }\n};\n\nconst codeBlockTitleRegex = /title=\".*\"/;\nexport default ({children, className: languageClassName, metastring}) => {\n  const {\n    siteConfig: {\n      themeConfig: {prism = {}},\n    },\n  } = useDocusaurusContext();\n  const [showCopied, setShowCopied] = useState(false);\n  const [mounted, setMounted] = useState(false); // The Prism theme on SSR is always the default theme but the site theme\n  // can be in a different mode. React hydration doesn't update DOM styles\n  // that come from SSR. Hence force a re-render after mounting to apply the\n  // current relevant styles. There will be a flash seen of the original\n  // styles seen using this current approach but that's probably ok. Fixing\n  // the flash will require changing the theming approach and is not worth it\n  // at this point.\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const button = useRef(null);\n  let highlightLines = [];\n  let codeBlockTitle = '';\n  const prismTheme = usePrismTheme();\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    // Tested above\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser\n      .parse(highlightLinesRange)\n      .filter((n) => n > 0);\n  }\n\n  if (metastring && codeBlockTitleRegex.test(metastring)) {\n    // Tested above\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    codeBlockTitle = metastring\n      .match(codeBlockTitleRegex)[0]\n      .split('title=')[1]\n      .replace(/\"+/g, '');\n  }\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, '');\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  } // only declaration OR directive highlight can be used for a block\n\n  let code = children.replace(/\\n$/, '');\n\n  if (highlightLines.length === 0 && language !== undefined) {\n    let range = '';\n    const directiveRegex = highlightDirectiveRegex(language); // go through line by line\n\n    const lines = children.replace(/\\n$/, '').split('\\n');\n    let blockStart; // loop through lines\n\n    for (let index = 0; index < lines.length; ) {\n      const line = lines[index]; // adjust for 0-index\n\n      const lineNumber = index + 1;\n      const match = line.match(directiveRegex);\n\n      if (match !== null) {\n        const directive = match\n          .slice(1)\n          .reduce((final, item) => final || item, undefined);\n\n        switch (directive) {\n          case 'highlight-next-line':\n            range += `${lineNumber},`;\n            break;\n\n          case 'highlight-start':\n            blockStart = lineNumber;\n            break;\n\n          case 'highlight-end':\n            range += `${blockStart}-${lineNumber - 1},`;\n            break;\n\n          default:\n            break;\n        }\n\n        lines.splice(index, 1);\n      } else {\n        // lines without directives are unchanged\n        index += 1;\n      }\n    }\n\n    highlightLines = rangeParser.parse(range);\n    code = lines.join('\\n');\n  }\n\n  const handleCopyCode = () => {\n    copy(code);\n    setShowCopied(true);\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      key={String(mounted)}\n      theme={prismTheme}\n      code={code} // @ts-expect-error: prism-react-renderer doesn't export Language type\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <>\n          {codeBlockTitle && (\n            <div style={style} className={styles.codeBlockTitle}>\n              {codeBlockTitle}\n            </div>\n          )}\n          <div className={styles.codeBlockContent}>\n            <button\n              ref={button}\n              type=\"button\"\n              aria-label=\"Copy code to clipboard\"\n              className={clsx(styles.copyButton, {\n                [styles.copyButtonWithTitle]: codeBlockTitle,\n              })}\n              onClick={handleCopyCode}>\n              {showCopied ? 'Copied' : 'Copy'}\n            </button>\n            <div\n              tabIndex={0}\n              className={clsx(className, styles.codeBlock, {\n                [styles.codeBlockWithTitle]: codeBlockTitle,\n              })}>\n              <div className={styles.codeBlockLines} style={style}>\n                {tokens.map((line, i) => {\n                  if (line.length === 1 && line[0].content === '') {\n                    line[0].content = '\\n'; // eslint-disable-line no-param-reassign\n                  }\n\n                  const lineProps = getLineProps({\n                    line,\n                    key: i,\n                  });\n\n                  if (highlightLines.includes(i + 1)) {\n                    lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n                  }\n\n                  return (\n                    <div key={i} {...lineProps}>\n                      {line.map((token, key) => (\n                        <span\n                          key={key}\n                          {...getTokenProps({\n                            token,\n                            key,\n                          })}\n                        />\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </Highlight>\n  );\n};\n"]}]}